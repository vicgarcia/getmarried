server {
    listen 80;
    server_name www.gertieandvicgetmarried.com gertieandvicgetmarried.com;
    return 301 https://gertieandvicgetmarried.com$request_uri;
}

server {
    listen 443 ssl;
    server_name www.gertieandvicgetmarried.com;
    return 301 https://gertieandvicgetmarried.com$request_uri;
}

upstream django {
    server 127.0.0.1:5007;
}

server {
    listen 443 ssl;
    server_name gertieandvicgetmarried.com;

    ssl_certificate /etc/nginx/ssl/getmarried.crt;
    ssl_certificate_key /etc/nginx/ssl/getmarried.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # generate this file like so : openssl dhparam -out dhparams.pem 2048
    ssl_dhparam /etc/nginx/dhparams.pem;

    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    # serve static files
    location /static {
        alias /opt/getmarried/static;
    }

    # proxy non-static requests to django server
    location / {
        proxy_pass http://127.0.0.1:5007;
        proxy_redirect off;

        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    }
}
